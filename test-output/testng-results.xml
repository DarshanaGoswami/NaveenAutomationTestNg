<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-03T13:06:45 IST" name="Suite" finished-at="2023-08-03T13:07:35 IST" duration-ms="50102">
    <groups>
    </groups>
    <test started-at="2023-08-03T13:06:45 IST" name="Test" finished-at="2023-08-03T13:07:35 IST" duration-ms="50102">
      <class name="TestCase.LoginTestCase">
        <test-method is-config="true" signature="launchBrowserandURL()[pri:0, instance:TestCase.LoginTestCase@77888435]" started-at="2023-08-03T13:06:45 IST" name="launchBrowserandURL" finished-at="2023-08-03T13:06:50 IST" duration-ms="4878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowserandURL -->
        <test-method signature="verifyLogin(java.lang.String,java.lang.String)[pri:0, instance:TestCase.LoginTestCase@77888435]" started-at="2023-08-03T13:06:50 IST" name="verifyLogin" data-provider="testData" finished-at="2023-08-03T13:06:52 IST" duration-ms="2762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcd@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secure123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="launchBrowserandURL()[pri:0, instance:TestCase.LoginTestCase@77888435]" started-at="2023-08-03T13:06:52 IST" name="launchBrowserandURL" finished-at="2023-08-03T13:06:55 IST" duration-ms="2791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowserandURL -->
        <test-method signature="verifyLogin(java.lang.String,java.lang.String)[pri:0, instance:TestCase.LoginTestCase@77888435]" started-at="2023-08-03T13:06:55 IST" name="verifyLogin" data-provider="testData" finished-at="2023-08-03T13:06:58 IST" duration-ms="2840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[efgh@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secure555]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="launchBrowserandURL()[pri:0, instance:TestCase.LoginTestCase@77888435]" started-at="2023-08-03T13:06:58 IST" name="launchBrowserandURL" finished-at="2023-08-03T13:07:02 IST" duration-ms="3676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowserandURL -->
        <test-method signature="verifyLogin(java.lang.String,java.lang.String)[pri:0, instance:TestCase.LoginTestCase@77888435]" started-at="2023-08-03T13:07:02 IST" name="verifyLogin" data-provider="testData" finished-at="2023-08-03T13:07:04 IST" duration-ms="2122" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at TestCase.LoginTestCase.verifyLogin(LoginTestCase.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
      </class> <!-- TestCase.LoginTestCase -->
      <class name="TestCase.RegistrationTestCase">
        <test-method is-config="true" signature="launchBrowserandURL()[pri:0, instance:TestCase.RegistrationTestCase@38425407]" started-at="2023-08-03T13:07:04 IST" name="launchBrowserandURL" finished-at="2023-08-03T13:07:11 IST" duration-ms="6809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowserandURL -->
        <test-method signature="verifySignup()[pri:0, instance:TestCase.RegistrationTestCase@38425407]" started-at="2023-08-03T13:07:11 IST" name="verifySignup" finished-at="2023-08-03T13:07:19 IST" duration-ms="7850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignup -->
      </class> <!-- TestCase.RegistrationTestCase -->
      <class name="TestCase.ProductValueTestCase">
        <test-method is-config="true" signature="launchBrowserandURL()[pri:0, instance:TestCase.ProductValueTestCase@43bc63a3]" started-at="2023-08-03T13:07:19 IST" name="launchBrowserandURL" finished-at="2023-08-03T13:07:25 IST" duration-ms="6740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowserandURL -->
        <test-method signature="comparision()[pri:0, instance:TestCase.ProductValueTestCase@43bc63a3]" started-at="2023-08-03T13:07:25 IST" name="comparision" finished-at="2023-08-03T13:07:35 IST" duration-ms="9505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparision -->
      </class> <!-- TestCase.ProductValueTestCase -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
